// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: certs.sql

package schema

import (
	"context"

	"github.com/google/uuid"
)

const createCert = `-- name: CreateCert :one
INSERT INTO
    certs (id, der)
VALUES
    ($1, $2) RETURNING id, der, created_at, updated_at
`

type CreateCertParams struct {
	ID  uuid.UUID `json:"id"`
	Der []byte    `json:"der"`
}

func (q *Queries) CreateCert(ctx context.Context, arg CreateCertParams) (Cert, error) {
	row := q.db.QueryRow(ctx, createCert, arg.ID, arg.Der)
	var i Cert
	err := row.Scan(
		&i.ID,
		&i.Der,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const findCertByID = `-- name: FindCertByID :one
SELECT
    id, der, created_at, updated_at
FROM
    certs
WHERE
    id = $1
`

func (q *Queries) FindCertByID(ctx context.Context, id uuid.UUID) (Cert, error) {
	row := q.db.QueryRow(ctx, findCertByID, id)
	var i Cert
	err := row.Scan(
		&i.ID,
		&i.Der,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
